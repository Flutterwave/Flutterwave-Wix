"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateSecret = exports.deleteSecret = exports.createSecret = exports.listSecretInfo = exports.getSecretValue = void 0;
const ambassadorWixVeloSecretsVaultV1Secret = __importStar(require("./velo-secrets-vault-v1-secret.http"));
function getSecretValue() {
    const payload = { name: ':name' };
    const getRequestOptions = ambassadorWixVeloSecretsVaultV1Secret.getSecretValue(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/api/v1/secrets/name/{name}',
        pathParams: { name: 'name' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.getSecretValue = getSecretValue;
function listSecretInfo() {
    const payload = {};
    const getRequestOptions = ambassadorWixVeloSecretsVaultV1Secret.listSecretInfo(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'GET',
        path: '/api/v1/secrets',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.listSecretInfo = listSecretInfo;
function createSecret() {
    const payload = {};
    const getRequestOptions = ambassadorWixVeloSecretsVaultV1Secret.createSecret(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'POST',
        path: '/api/v1/secrets',
        pathParams: {},
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.createSecret = createSecret;
function deleteSecret() {
    const payload = { id: ':id' };
    const getRequestOptions = ambassadorWixVeloSecretsVaultV1Secret.deleteSecret(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'DELETE',
        path: '/api/v1/secrets/{id}',
        pathParams: { id: 'id' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.deleteSecret = deleteSecret;
function updateSecret() {
    const payload = { id: ':id' };
    const getRequestOptions = ambassadorWixVeloSecretsVaultV1Secret.partiallyUpdateSecret(payload);
    const getUrl = (context) => {
        const { url } = getRequestOptions(context);
        return url;
    };
    return {
        getUrl,
        httpMethod: 'PATCH',
        path: '/api/v1/secrets/{id}',
        pathParams: { id: 'id' },
        __requestType: null,
        __originalRequestType: null,
        __responseType: null,
        __originalResponseType: null,
    };
}
exports.updateSecret = updateSecret;
//# sourceMappingURL=velo-secrets-vault-v1-secret.meta.js.map