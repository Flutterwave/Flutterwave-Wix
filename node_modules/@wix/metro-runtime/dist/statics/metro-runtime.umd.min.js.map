{"version":3,"file":"metro-runtime.umd.min.js","mappings":"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","sources":["webpack://_wix_metro_runtime/webpack/universalModuleDefinition","webpack://_wix_metro_runtime/webpack/bootstrap","webpack://_wix_metro_runtime/webpack/runtime/define property getters","webpack://_wix_metro_runtime/webpack/runtime/hasOwnProperty shorthand","webpack://_wix_metro_runtime/webpack/runtime/make namespace object","webpack://_wix_metro_runtime/./serialization/utils.ts","webpack://_wix_metro_runtime/./url-resolver.ts","webpack://_wix_metro_runtime/./utils.ts","webpack://_wix_metro_runtime/./flatten-params.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"counter\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"counter\"] = factory();\n\telse\n\t\troot[\"counter\"] = factory();\n})((typeof self !== 'undefined' ? self : this), () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","type SchemaType = 'Array' | 'Map';\n\nexport function parseLeanSchemaRef(renderedSchemaName: string = ''): {\n  schemaName: string;\n  schemaType?: SchemaType;\n} {\n  const [typeOrName, schemaName] = getSchemaNameAndType(renderedSchemaName);\n\n  if (schemaName) {\n    return {\n      schemaName,\n      schemaType: typeOrName as SchemaType,\n    };\n  }\n\n  return {\n    schemaName: typeOrName,\n  };\n}\n\n// if there is no type, returns only the name\nconst getSchemaNameAndType = (leanSchema: string): string[] =>\n  leanSchema.split('#');\n","import { findByPath } from './utils';\n\nconst USER_DOMAIN = '_';\n\nconst DOMAINS = ['wix.com', 'editorx.com'];\n\nconst WIX_API_DOMAINS = ['42.wixprod.net', 'uw2-edt-1.wixprod.net'];\n\nconst DEV_WIX_CODE_DOMAIN = 'dev.wix-code.com';\n\nconst REGEX_CAPTURE_PROTO_FIELD = /{(.*)}/;\n\nconst REGEX_CAPTURE_DOMAINS = new RegExp(`\\\\.(${DOMAINS.join('|')})$`);\n\nconst REGEX_CAPTURE_API_DOMAINS = new RegExp(\n  `\\\\.(${WIX_API_DOMAINS.join('|')})$`,\n);\n\nconst REGEX_CAPTURE_DEV_WIX_CODE_DOMAIN = new RegExp(\n  `.*\\\\.${DEV_WIX_CODE_DOMAIN}$`,\n);\n\nexport type ResolveUrlOpts = {\n  // resource path as defined in proto file, including all wildcards & co.\n  protoPath: string;\n\n  // domain as defined on FP to its mappings (might be more than one)\n  // www._base_domain_ => [{ srcPath: '/_api/foo', destPath: '/api' }]\n  domainToMappings: DomainToMappings;\n\n  // actual payload attached to request, needed in order to rersolve path,\n  // in case it conatins some dynamic parameters\n  data?: object;\n\n  // request's host\n  host: string;\n};\n\nexport function resolveUrl(opts: ResolveUrlOpts) {\n  const domain = resolveDomain(opts.host);\n  const mappings = resolveMappingsByDomain(domain, opts.domainToMappings);\n  const path = injectDataIntoProtoPath(opts.protoPath, opts.data || {});\n\n  return resolvePath(path, mappings);\n}\n\nfunction injectDataIntoProtoPath(protoPath: string, data: object) {\n  return protoPath\n    .split('/')\n    .map((path) => maybeProtoPathToData(path, data))\n    .join('/');\n}\n\nfunction maybeProtoPathToData(protoPath: string, data: object) {\n  const protoRegExpMatch = protoPath.match(REGEX_CAPTURE_PROTO_FIELD) || [];\n\n  const field = protoRegExpMatch[1];\n\n  if (field) {\n    const suffix = protoPath.replace(protoRegExpMatch[0]!, '');\n    return findByPath(data, field, protoPath, suffix);\n  }\n\n  return protoPath;\n}\n\nfunction resolveDomain(host: string) {\n  const resolvedHost = fixHostExceptions(host);\n\n  return resolvedHost\n    .replace(REGEX_CAPTURE_DOMAINS, '._base_domain_')\n    .replace(REGEX_CAPTURE_API_DOMAINS, '._api_base_domain_')\n    .replace(REGEX_CAPTURE_DEV_WIX_CODE_DOMAIN, '*.dev.wix-code.com');\n}\n\n// hosts which standard string replacing doesn't apply to them, will be fixed here.\nfunction fixHostExceptions(host: string) {\n  // https://system-kb.wixanswers.com/kb/en/article/editorx-domains-matching-to-wixcom\n  return host.replace('create.editorx.com', 'editor.editorx.com');\n}\n\nfunction resolveMappingsByDomain(\n  domain: string,\n  domainToMappings: DomainToMappings,\n) {\n  const mappings = domainToMappings[domain] || domainToMappings[USER_DOMAIN];\n\n  if (!mappings) {\n    if (isBaseDomain(domain)) {\n      // fallback <lang>.wix.com sub domains to www.wix.com\n      // since all of the languages subdomain are not mapped automatically in FP and we want to support those kind of calls\n      // for example: fr.wix.com\n      return domainToMappings[wwwBaseDomain];\n    }\n  }\n\n  return mappings;\n}\n\nfunction resolvePath(protoPath: string, mappings: Mapping[]) {\n  const mapping = mappings?.find((m) => protoPath.startsWith(m.destPath));\n\n  if (!mapping) {\n    // todo: should we return the path? if no - what should we do in case of testings?\n    return protoPath;\n  }\n\n  return mapping.srcPath + protoPath.slice(mapping.destPath.length);\n}\n\ntype Mapping = {\n  srcPath: string;\n  destPath: string;\n};\n\ntype DomainToMappings = Record<string, Mapping[]>;\n\nfunction isBaseDomain(domain: string) {\n  return !!domain.match(/\\._base_domain_$/);\n}\n\nconst wwwBaseDomain = 'www._base_domain_';\n","export function findByPath(\n  obj: object,\n  path: string,\n  defaultValue: string,\n  suffix: string,\n) {\n  let result: any = obj;\n  for (const field of path.split('.')) {\n    if (!result) {\n      return defaultValue;\n    }\n    result = result[field];\n  }\n\n  return `${result}${suffix}`;\n}\n","// Flatten a nested object to params object { field: { text: 'foo' } } => { field.text ='foo' }\nfunction flattenParams(data: object, path = '') {\n  const params: any = {};\n\n  Object.entries(data).forEach(([key, value]) => {\n    const isObject =\n      value !== null && typeof value === 'object' && !Array.isArray(value);\n    const fieldPath = resolvePath(path, key);\n\n    if (isObject) {\n      const serializedObject = flattenParams(value, fieldPath);\n      Object.assign(params, serializedObject);\n    } else {\n      params[fieldPath] = value;\n    }\n  });\n\n  return params;\n}\n\nfunction resolvePath(path: string, key: string) {\n  return `${path}${path ? '.' : ''}${key}`;\n}\n\nexport function toURLSearchParams(params: any) {\n  const flatten = flattenParams(params);\n\n  return Object.entries(flatten).reduce((urlSearchParams, [key, value]) => {\n    // inorder to make `foo: [1,2]` turn into `foo=1&foo=2` and not `foo[]=1&foo[]=2`\n    const keyParams = Array.isArray(value) ? value : [value];\n\n    keyParams.forEach((param: any) => {\n      if (param === undefined || param === null) {\n        return;\n      }\n\n      urlSearchParams.append(key, param);\n    });\n\n    return urlSearchParams;\n  }, new URLSearchParams());\n}\n"],"names":["root","factory","exports","module","define","amd","self","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","parseLeanSchemaRef","renderedSchemaName","typeOrName","schemaName","getSchemaNameAndType","schemaType","leanSchema","split","USER_DOMAIN","REGEX_CAPTURE_PROTO_FIELD","REGEX_CAPTURE_DOMAINS","RegExp","join","REGEX_CAPTURE_API_DOMAINS","REGEX_CAPTURE_DEV_WIX_CODE_DOMAIN","resolveUrl","opts","mappings","domain","domainToMappings","match","isBaseDomain","wwwBaseDomain","resolveMappingsByDomain","host","replace","fixHostExceptions","protoPath","data","mapping","find","m","startsWith","destPath","srcPath","slice","length","resolvePath","map","path","protoRegExpMatch","field","suffix","defaultValue","result","findByPath","maybeProtoPathToData","flattenParams","params","entries","forEach","_ref","isObject","Array","isArray","fieldPath","serializedObject","assign","toURLSearchParams","flatten","reduce","urlSearchParams","_ref2","param","append","URLSearchParams"],"sourceRoot":""}